//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace X1APServer.Service.AuthService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AuthService.IAuthService")]
    public interface IAuthService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/CheckAuthLogin", ReplyAction="http://tempuri.org/IAuthService/CheckAuthLoginResponse")]
        BMDC.Models.Auth.CheckAuthLoginM.LoginRsp CheckAuthLogin(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.CheckAuthLoginM.LoginReq loginReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/CheckAuthLogin", ReplyAction="http://tempuri.org/IAuthService/CheckAuthLoginResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.CheckAuthLoginM.LoginRsp> CheckAuthLoginAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.CheckAuthLoginM.LoginReq loginReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/CheckToken", ReplyAction="http://tempuri.org/IAuthService/CheckTokenResponse")]
        BMDC.Models.Auth.CheckTokenM.CheckTokenRsp CheckToken(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.CheckTokenM.CheckTokenReq checkTokenReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/CheckToken", ReplyAction="http://tempuri.org/IAuthService/CheckTokenResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.CheckTokenM.CheckTokenRsp> CheckTokenAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.CheckTokenM.CheckTokenReq checkTokenReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/CheckTokenAuth", ReplyAction="http://tempuri.org/IAuthService/CheckTokenAuthResponse")]
        BMDC.Models.Auth.CheckTokenAuthM.CheckAuthRsp CheckTokenAuth(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.CheckTokenAuthM.CheckAuthReq checkAuthReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/CheckTokenAuth", ReplyAction="http://tempuri.org/IAuthService/CheckTokenAuthResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.CheckTokenAuthM.CheckAuthRsp> CheckTokenAuthAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.CheckTokenAuthM.CheckAuthReq checkAuthReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/GetSysMenuList", ReplyAction="http://tempuri.org/IAuthService/GetSysMenuListResponse")]
        BMDC.Models.Auth.GetSysMenuListM.GetSysMenuListRsp GetSysMenuList(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetSysMenuListM.GetSysMenuListReq getSysMenuListReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/GetSysMenuList", ReplyAction="http://tempuri.org/IAuthService/GetSysMenuListResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.GetSysMenuListM.GetSysMenuListRsp> GetSysMenuListAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetSysMenuListM.GetSysMenuListReq getSysMenuListReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/GetOTPWithAuth", ReplyAction="http://tempuri.org/IAuthService/GetOTPWithAuthResponse")]
        BMDC.Models.Auth.GetOTPWithAuthM.GetOTPRsp GetOTPWithAuth(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetOTPWithAuthM.GetOTPReq getOTPReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/GetOTPWithAuth", ReplyAction="http://tempuri.org/IAuthService/GetOTPWithAuthResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.GetOTPWithAuthM.GetOTPRsp> GetOTPWithAuthAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetOTPWithAuthM.GetOTPReq getOTPReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/CheckOTPToken", ReplyAction="http://tempuri.org/IAuthService/CheckOTPTokenResponse")]
        BMDC.Models.Auth.CheckOTPTokenM.CheckOTPRsp CheckOTPToken(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.CheckOTPTokenM.CheckOTPReq checkOTPReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/CheckOTPToken", ReplyAction="http://tempuri.org/IAuthService/CheckOTPTokenResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.CheckOTPTokenM.CheckOTPRsp> CheckOTPTokenAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.CheckOTPTokenM.CheckOTPReq checkOTPReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/Register", ReplyAction="http://tempuri.org/IAuthService/RegisterResponse")]
        BMDC.Models.Auth.RegisterM.RegisterRsp Register(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.RegisterM.RegisterReq registerReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/Register", ReplyAction="http://tempuri.org/IAuthService/RegisterResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.RegisterM.RegisterRsp> RegisterAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.RegisterM.RegisterReq registerReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/GetUser", ReplyAction="http://tempuri.org/IAuthService/GetUserResponse")]
        BMDC.Models.Auth.GetUserM.GetUserRsp GetUser(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetUserM.GetUserReq getUserReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/GetUser", ReplyAction="http://tempuri.org/IAuthService/GetUserResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.GetUserM.GetUserRsp> GetUserAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetUserM.GetUserReq getUserReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/UpdateUser", ReplyAction="http://tempuri.org/IAuthService/UpdateUserResponse")]
        BMDC.Models.Auth.UpdateUserM.UpdateUserRsp UpdateUser(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.UpdateUserM.UpdateUserReq updateUserReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/UpdateUser", ReplyAction="http://tempuri.org/IAuthService/UpdateUserResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.UpdateUserM.UpdateUserRsp> UpdateUserAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.UpdateUserM.UpdateUserReq updateUserReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/UpdateUserPassword", ReplyAction="http://tempuri.org/IAuthService/UpdateUserPasswordResponse")]
        BMDC.Models.Auth.UpdateUserPasswordM.UpdateUserPasswordRsp UpdateUserPassword(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.UpdateUserPasswordM.UpdateUserPasswordReq updateUserPasswordReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/UpdateUserPassword", ReplyAction="http://tempuri.org/IAuthService/UpdateUserPasswordResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.UpdateUserPasswordM.UpdateUserPasswordRsp> UpdateUserPasswordAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.UpdateUserPasswordM.UpdateUserPasswordReq updateUserPasswordReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/UpdateUseState", ReplyAction="http://tempuri.org/IAuthService/UpdateUseStateResponse")]
        BMDC.Models.Auth.UpdateUseStateM.UpdateUseStateRsp UpdateUseState(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.UpdateUseStateM.UpdateUseStateReq updateUseStateReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/UpdateUseState", ReplyAction="http://tempuri.org/IAuthService/UpdateUseStateResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.UpdateUseStateM.UpdateUseStateRsp> UpdateUseStateAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.UpdateUseStateM.UpdateUseStateReq updateUseStateReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/GetUserList", ReplyAction="http://tempuri.org/IAuthService/GetUserListResponse")]
        BMDC.Models.Auth.GetUserListM.GetUserListRsp GetUserList(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetUserListM.GetUserListReq request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/GetUserList", ReplyAction="http://tempuri.org/IAuthService/GetUserListResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.GetUserListM.GetUserListRsp> GetUserListAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetUserListM.GetUserListReq request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/GetRoleList", ReplyAction="http://tempuri.org/IAuthService/GetRoleListResponse")]
        BMDC.Models.Auth.GetRoleListM.GetRoleListRsp GetRoleList(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetRoleListM.GetRoleListReq request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/GetRoleList", ReplyAction="http://tempuri.org/IAuthService/GetRoleListResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.GetRoleListM.GetRoleListRsp> GetRoleListAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetRoleListM.GetRoleListReq request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/DeleteUser", ReplyAction="http://tempuri.org/IAuthService/DeleteUserResponse")]
        BMDC.Models.Auth.DeleteUserM.DeleteUserRsp DeleteUser(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.DeleteUserM.DeleteUserReq request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/DeleteUser", ReplyAction="http://tempuri.org/IAuthService/DeleteUserResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.DeleteUserM.DeleteUserRsp> DeleteUserAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.DeleteUserM.DeleteUserReq request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/Logout", ReplyAction="http://tempuri.org/IAuthService/LogoutResponse")]
        BMDC.Models.Auth.LogoutM.LogoutRsp Logout(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.LogoutM.LogoutReq request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/Logout", ReplyAction="http://tempuri.org/IAuthService/LogoutResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.LogoutM.LogoutRsp> LogoutAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.LogoutM.LogoutReq request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/IsOnline", ReplyAction="http://tempuri.org/IAuthService/IsOnlineResponse")]
        BMDC.Models.Auth.IsOnlineM.IsOnlineRsp IsOnline(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.IsOnlineM.IsOnlineReq request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/IsOnline", ReplyAction="http://tempuri.org/IAuthService/IsOnlineResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.IsOnlineM.IsOnlineRsp> IsOnlineAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.IsOnlineM.IsOnlineReq request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/ResetPassword", ReplyAction="http://tempuri.org/IAuthService/ResetPasswordResponse")]
        BMDC.Models.Auth.ResetPasswordM.ResetPasswordRsp ResetPassword(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.ResetPasswordM.ResetPasswordReq request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/ResetPassword", ReplyAction="http://tempuri.org/IAuthService/ResetPasswordResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.ResetPasswordM.ResetPasswordRsp> ResetPasswordAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.ResetPasswordM.ResetPasswordReq request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/RefreshToken", ReplyAction="http://tempuri.org/IAuthService/RefreshTokenResponse")]
        BMDC.Models.Auth.RefreshTokenM.RefreshTokenRsp RefreshToken(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.RefreshTokenM.RefreshTokenReq request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/RefreshToken", ReplyAction="http://tempuri.org/IAuthService/RefreshTokenResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.RefreshTokenM.RefreshTokenRsp> RefreshTokenAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.RefreshTokenM.RefreshTokenReq request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/SyncUserList", ReplyAction="http://tempuri.org/IAuthService/SyncUserListResponse")]
        BMDC.Models.Auth.SyncUserListM.Response SyncUserList(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.SyncUserListM.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/SyncUserList", ReplyAction="http://tempuri.org/IAuthService/SyncUserListResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.SyncUserListM.Response> SyncUserListAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.SyncUserListM.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/GenerateToken", ReplyAction="http://tempuri.org/IAuthService/GenerateTokenResponse")]
        BMDC.Models.Auth.GenerateTokenM.Response GenerateToken(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GenerateTokenM.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/GenerateToken", ReplyAction="http://tempuri.org/IAuthService/GenerateTokenResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.GenerateTokenM.Response> GenerateTokenAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GenerateTokenM.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/AddOrUpdateRole", ReplyAction="http://tempuri.org/IAuthService/AddOrUpdateRoleResponse")]
        BMDC.Models.Auth.AddOrUpdateRole.Resposne AddOrUpdateRole(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.AddOrUpdateRole.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/AddOrUpdateRole", ReplyAction="http://tempuri.org/IAuthService/AddOrUpdateRoleResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.AddOrUpdateRole.Resposne> AddOrUpdateRoleAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.AddOrUpdateRole.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/GetFunctionList", ReplyAction="http://tempuri.org/IAuthService/GetFunctionListResponse")]
        BMDC.Models.Auth.GetFunctionListM.Response GetFunctionList(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetFunctionListM.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/GetFunctionList", ReplyAction="http://tempuri.org/IAuthService/GetFunctionListResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.GetFunctionListM.Response> GetFunctionListAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetFunctionListM.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/GetRole", ReplyAction="http://tempuri.org/IAuthService/GetRoleResponse")]
        BMDC.Models.Auth.GetRoleM.Response GetRole(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetRoleM.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/GetRole", ReplyAction="http://tempuri.org/IAuthService/GetRoleResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.GetRoleM.Response> GetRoleAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetRoleM.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/AddFunction", ReplyAction="http://tempuri.org/IAuthService/AddFunctionResponse")]
        BMDC.Models.Auth.AddFunctionM.Response AddFunction(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.AddFunctionM.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/AddFunction", ReplyAction="http://tempuri.org/IAuthService/AddFunctionResponse")]
        System.Threading.Tasks.Task<BMDC.Models.Auth.AddFunctionM.Response> AddFunctionAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.AddFunctionM.Request request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthServiceChannel : X1APServer.Service.AuthService.IAuthService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthServiceClient : System.ServiceModel.ClientBase<X1APServer.Service.AuthService.IAuthService>, X1APServer.Service.AuthService.IAuthService {
        
        public AuthServiceClient() {
        }
        
        public AuthServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BMDC.Models.Auth.CheckAuthLoginM.LoginRsp CheckAuthLogin(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.CheckAuthLoginM.LoginReq loginReq) {
            return base.Channel.CheckAuthLogin(serviceInfo, loginReq);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.CheckAuthLoginM.LoginRsp> CheckAuthLoginAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.CheckAuthLoginM.LoginReq loginReq) {
            return base.Channel.CheckAuthLoginAsync(serviceInfo, loginReq);
        }
        
        public BMDC.Models.Auth.CheckTokenM.CheckTokenRsp CheckToken(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.CheckTokenM.CheckTokenReq checkTokenReq) {
            return base.Channel.CheckToken(serviceInfo, checkTokenReq);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.CheckTokenM.CheckTokenRsp> CheckTokenAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.CheckTokenM.CheckTokenReq checkTokenReq) {
            return base.Channel.CheckTokenAsync(serviceInfo, checkTokenReq);
        }
        
        public BMDC.Models.Auth.CheckTokenAuthM.CheckAuthRsp CheckTokenAuth(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.CheckTokenAuthM.CheckAuthReq checkAuthReq) {
            return base.Channel.CheckTokenAuth(serviceInfo, checkAuthReq);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.CheckTokenAuthM.CheckAuthRsp> CheckTokenAuthAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.CheckTokenAuthM.CheckAuthReq checkAuthReq) {
            return base.Channel.CheckTokenAuthAsync(serviceInfo, checkAuthReq);
        }
        
        public BMDC.Models.Auth.GetSysMenuListM.GetSysMenuListRsp GetSysMenuList(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetSysMenuListM.GetSysMenuListReq getSysMenuListReq) {
            return base.Channel.GetSysMenuList(serviceInfo, getSysMenuListReq);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.GetSysMenuListM.GetSysMenuListRsp> GetSysMenuListAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetSysMenuListM.GetSysMenuListReq getSysMenuListReq) {
            return base.Channel.GetSysMenuListAsync(serviceInfo, getSysMenuListReq);
        }
        
        public BMDC.Models.Auth.GetOTPWithAuthM.GetOTPRsp GetOTPWithAuth(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetOTPWithAuthM.GetOTPReq getOTPReq) {
            return base.Channel.GetOTPWithAuth(serviceInfo, getOTPReq);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.GetOTPWithAuthM.GetOTPRsp> GetOTPWithAuthAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetOTPWithAuthM.GetOTPReq getOTPReq) {
            return base.Channel.GetOTPWithAuthAsync(serviceInfo, getOTPReq);
        }
        
        public BMDC.Models.Auth.CheckOTPTokenM.CheckOTPRsp CheckOTPToken(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.CheckOTPTokenM.CheckOTPReq checkOTPReq) {
            return base.Channel.CheckOTPToken(serviceInfo, checkOTPReq);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.CheckOTPTokenM.CheckOTPRsp> CheckOTPTokenAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.CheckOTPTokenM.CheckOTPReq checkOTPReq) {
            return base.Channel.CheckOTPTokenAsync(serviceInfo, checkOTPReq);
        }
        
        public BMDC.Models.Auth.RegisterM.RegisterRsp Register(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.RegisterM.RegisterReq registerReq) {
            return base.Channel.Register(serviceInfo, registerReq);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.RegisterM.RegisterRsp> RegisterAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.RegisterM.RegisterReq registerReq) {
            return base.Channel.RegisterAsync(serviceInfo, registerReq);
        }
        
        public BMDC.Models.Auth.GetUserM.GetUserRsp GetUser(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetUserM.GetUserReq getUserReq) {
            return base.Channel.GetUser(serviceInfo, getUserReq);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.GetUserM.GetUserRsp> GetUserAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetUserM.GetUserReq getUserReq) {
            return base.Channel.GetUserAsync(serviceInfo, getUserReq);
        }
        
        public BMDC.Models.Auth.UpdateUserM.UpdateUserRsp UpdateUser(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.UpdateUserM.UpdateUserReq updateUserReq) {
            return base.Channel.UpdateUser(serviceInfo, updateUserReq);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.UpdateUserM.UpdateUserRsp> UpdateUserAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.UpdateUserM.UpdateUserReq updateUserReq) {
            return base.Channel.UpdateUserAsync(serviceInfo, updateUserReq);
        }
        
        public BMDC.Models.Auth.UpdateUserPasswordM.UpdateUserPasswordRsp UpdateUserPassword(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.UpdateUserPasswordM.UpdateUserPasswordReq updateUserPasswordReq) {
            return base.Channel.UpdateUserPassword(serviceInfo, updateUserPasswordReq);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.UpdateUserPasswordM.UpdateUserPasswordRsp> UpdateUserPasswordAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.UpdateUserPasswordM.UpdateUserPasswordReq updateUserPasswordReq) {
            return base.Channel.UpdateUserPasswordAsync(serviceInfo, updateUserPasswordReq);
        }
        
        public BMDC.Models.Auth.UpdateUseStateM.UpdateUseStateRsp UpdateUseState(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.UpdateUseStateM.UpdateUseStateReq updateUseStateReq) {
            return base.Channel.UpdateUseState(serviceInfo, updateUseStateReq);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.UpdateUseStateM.UpdateUseStateRsp> UpdateUseStateAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.UpdateUseStateM.UpdateUseStateReq updateUseStateReq) {
            return base.Channel.UpdateUseStateAsync(serviceInfo, updateUseStateReq);
        }
        
        public BMDC.Models.Auth.GetUserListM.GetUserListRsp GetUserList(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetUserListM.GetUserListReq request) {
            return base.Channel.GetUserList(serviceInfo, request);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.GetUserListM.GetUserListRsp> GetUserListAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetUserListM.GetUserListReq request) {
            return base.Channel.GetUserListAsync(serviceInfo, request);
        }
        
        public BMDC.Models.Auth.GetRoleListM.GetRoleListRsp GetRoleList(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetRoleListM.GetRoleListReq request) {
            return base.Channel.GetRoleList(serviceInfo, request);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.GetRoleListM.GetRoleListRsp> GetRoleListAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetRoleListM.GetRoleListReq request) {
            return base.Channel.GetRoleListAsync(serviceInfo, request);
        }
        
        public BMDC.Models.Auth.DeleteUserM.DeleteUserRsp DeleteUser(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.DeleteUserM.DeleteUserReq request) {
            return base.Channel.DeleteUser(serviceInfo, request);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.DeleteUserM.DeleteUserRsp> DeleteUserAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.DeleteUserM.DeleteUserReq request) {
            return base.Channel.DeleteUserAsync(serviceInfo, request);
        }
        
        public BMDC.Models.Auth.LogoutM.LogoutRsp Logout(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.LogoutM.LogoutReq request) {
            return base.Channel.Logout(serviceInfo, request);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.LogoutM.LogoutRsp> LogoutAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.LogoutM.LogoutReq request) {
            return base.Channel.LogoutAsync(serviceInfo, request);
        }
        
        public BMDC.Models.Auth.IsOnlineM.IsOnlineRsp IsOnline(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.IsOnlineM.IsOnlineReq request) {
            return base.Channel.IsOnline(serviceInfo, request);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.IsOnlineM.IsOnlineRsp> IsOnlineAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.IsOnlineM.IsOnlineReq request) {
            return base.Channel.IsOnlineAsync(serviceInfo, request);
        }
        
        public BMDC.Models.Auth.ResetPasswordM.ResetPasswordRsp ResetPassword(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.ResetPasswordM.ResetPasswordReq request) {
            return base.Channel.ResetPassword(serviceInfo, request);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.ResetPasswordM.ResetPasswordRsp> ResetPasswordAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.ResetPasswordM.ResetPasswordReq request) {
            return base.Channel.ResetPasswordAsync(serviceInfo, request);
        }
        
        public BMDC.Models.Auth.RefreshTokenM.RefreshTokenRsp RefreshToken(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.RefreshTokenM.RefreshTokenReq request) {
            return base.Channel.RefreshToken(serviceInfo, request);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.RefreshTokenM.RefreshTokenRsp> RefreshTokenAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.RefreshTokenM.RefreshTokenReq request) {
            return base.Channel.RefreshTokenAsync(serviceInfo, request);
        }
        
        public BMDC.Models.Auth.SyncUserListM.Response SyncUserList(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.SyncUserListM.Request request) {
            return base.Channel.SyncUserList(serviceInfo, request);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.SyncUserListM.Response> SyncUserListAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.SyncUserListM.Request request) {
            return base.Channel.SyncUserListAsync(serviceInfo, request);
        }
        
        public BMDC.Models.Auth.GenerateTokenM.Response GenerateToken(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GenerateTokenM.Request request) {
            return base.Channel.GenerateToken(serviceInfo, request);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.GenerateTokenM.Response> GenerateTokenAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GenerateTokenM.Request request) {
            return base.Channel.GenerateTokenAsync(serviceInfo, request);
        }
        
        public BMDC.Models.Auth.AddOrUpdateRole.Resposne AddOrUpdateRole(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.AddOrUpdateRole.Request request) {
            return base.Channel.AddOrUpdateRole(serviceInfo, request);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.AddOrUpdateRole.Resposne> AddOrUpdateRoleAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.AddOrUpdateRole.Request request) {
            return base.Channel.AddOrUpdateRoleAsync(serviceInfo, request);
        }
        
        public BMDC.Models.Auth.GetFunctionListM.Response GetFunctionList(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetFunctionListM.Request request) {
            return base.Channel.GetFunctionList(serviceInfo, request);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.GetFunctionListM.Response> GetFunctionListAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetFunctionListM.Request request) {
            return base.Channel.GetFunctionListAsync(serviceInfo, request);
        }
        
        public BMDC.Models.Auth.GetRoleM.Response GetRole(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetRoleM.Request request) {
            return base.Channel.GetRole(serviceInfo, request);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.GetRoleM.Response> GetRoleAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.GetRoleM.Request request) {
            return base.Channel.GetRoleAsync(serviceInfo, request);
        }
        
        public BMDC.Models.Auth.AddFunctionM.Response AddFunction(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.AddFunctionM.Request request) {
            return base.Channel.AddFunction(serviceInfo, request);
        }
        
        public System.Threading.Tasks.Task<BMDC.Models.Auth.AddFunctionM.Response> AddFunctionAsync(BMDC.Models.Auth.AuthCommon.ServiceInfo serviceInfo, BMDC.Models.Auth.AddFunctionM.Request request) {
            return base.Channel.AddFunctionAsync(serviceInfo, request);
        }
    }
}
